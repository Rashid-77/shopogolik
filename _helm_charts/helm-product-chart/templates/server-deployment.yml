apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    name: {{ .Release.Name }}
  name: {{ .Release.Name }}
spec:
  progressDeadlineSeconds: 2147483647
  replicas: {{ .Values.productServer.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: product-cm
              key: db_name
        - name: POSTGRES_HOST
          value: {{ .Values.db.host | quote }}
        - name: POSTGRES_PORT
          value: {{ .Values.db.port | quote }}
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: user
              name: product-postgres-credentials
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: product-postgres-credentials
        - name: FIRST_SUPERUSER
          valueFrom:
            secretKeyRef:
              name: product-server-credentials
              key: superuser
        - name: FIRST_SUPERUSER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: product-server-credentials
              key: superuser_pwd

        image: {{ .Values.productServer.image.repository }}
        imagePullPolicy: {{ .Values.productServer.image.pullPolicy }}
        name: {{ .Release.Name }}
        ports:
        - name: {{ .Values.productServer.portName }}
          containerPort: {{ .Values.productServer.port }}
        resources: {}
          # limits:
          #   memory: 2Gi
          #   cpu: "1"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
